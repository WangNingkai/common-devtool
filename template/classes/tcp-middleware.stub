<?php declare(strict_types=1);
{include file="file-header.stub"}
namespace {= namespace};

use Swoft\Bean\Annotation\Mapping\Bean;
use Swoft\Log\Helper\CLog;
use Swoft\Tcp\Server\Contract\RequestHandlerInterface;
use Swoft\Tcp\Server\Contract\MiddlewareInterface;
use Swoft\Tcp\Server\Contract\RequestInterface;
use Swoft\Tcp\Server\Contract\ResponseInterface;

/**
 * Class {= className} - Custom middleware
 * @Bean()
 */
class {= className} implements MiddlewareInterface
{
    /**
     * @param RequestInterface        $request
     * @param RequestHandlerInterface $handler
     *
     * @return ResponseInterface
     */
    public function process(RequestInterface $request, RequestHandlerInterface $handler): ResponseInterface
    {
        $start = '>before ';
        CLog::info('before handle');

        $resp = $handler->handle($request);
        $resp->setData($start . $resp->getData() . ' after>');

        CLog::info('after handle');
        return $resp;
    }
}
